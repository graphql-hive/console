// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`FEDERATION > can publish a schema with breaking, warning and safe changes > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 4 changes

   Breaking changes:
   - Field email was removed from object type User
   Dangerous changes:
   - Enum value VIEWER was added to enum UserRole
   Safe changes:
   - Field address was added to object type User
   - Field User.role changed type from UserRole to UserRole!

View full report:
http://__URL__

`;

exports[`FEDERATION > can publish a schema with breaking, warning and safe changes > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can publish and check a schema with target:registry:read access > schemaCheck (breaking) 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 1 change

   Breaking changes:
   - Field email was removed from object type User

View full report:
http://__URL__

`;

exports[`FEDERATION > can publish and check a schema with target:registry:read access > schemaCheck (non-breaking) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
ℹ Detected 1 change

   Safe changes:
   - Field nickname was added to object type User

View full report:
http://__URL__
`;

exports[`FEDERATION > can publish and check a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can update a service without providing a url if previously published > schema publish initial 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can update a service without providing a url if previously published > schema publish same url 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema published
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can update a service without providing a url if previously published > schemaPublish (initial) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can update the service url and show it in comparison query > schemaPublish (initial) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > can update the service url and show it in comparison query > schemaPublish (new) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ New service url: http://__URL__ (previously: http://__URL__
ℹ Available at http://__URL__
`;

exports[`FEDERATION > check validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`FEDERATION > check validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`FEDERATION > check validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`FEDERATION > publish validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`FEDERATION > publish validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`FEDERATION > publish validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > publishing invalid schema SDL provides meaningful feedback for the user. > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: The SDL is not valid at line 1, column 1:
 ›    Syntax Error: Unexpected Name "iliketurtles".  [301]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;

exports[`FEDERATION > schema:check accepts a \`--url\` argument in distributed projects 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`FEDERATION > schema:check should notify user when registry is empty > schemaCheck 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`FEDERATION > schema:check should throw on corrupted schema > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - [test] Unknown type User

View full report:
http://__URL__

`;

exports[`FEDERATION > schema:fetch can fetch a latest schema with target:registry:read access > latest sdl 1`] = `
type Query {
  users: [User!]
}

type User {
  id: ID!
  name: String!
  email: String!
}
`;

exports[`FEDERATION > schema:fetch can fetch a latest schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > schema:fetch can fetch a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`FEDERATION > schema:publish should see Invalid Token error when token is invalid > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: A valid registry token is required to perform the action. The
 ›   registry token used does not exist or has been revoked.  [106]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;

exports[`SINGLE > can publish a schema with breaking, warning and safe changes > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 4 changes

   Breaking changes:
   - Field email was removed from object type User
   Dangerous changes:
   - Enum value VIEWER was added to enum UserRole
   Safe changes:
   - Field address was added to object type User
   - Field User.role changed type from UserRole to UserRole!

View full report:
http://__URL__

`;

exports[`SINGLE > can publish a schema with breaking, warning and safe changes > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > can publish and check a schema with target:registry:read access > schemaCheck (breaking) 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 1 change

   Breaking changes:
   - Field email was removed from object type User

View full report:
http://__URL__

`;

exports[`SINGLE > can publish and check a schema with target:registry:read access > schemaCheck (non-breaking) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
ℹ Detected 1 change

   Safe changes:
   - Field nickname was added to object type User

View full report:
http://__URL__
`;

exports[`SINGLE > can publish and check a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > can update a service without providing a url if previously published > schema publish initial 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > can update a service without providing a url if previously published > schema publish same url 1`] = ``;

exports[`SINGLE > can update a service without providing a url if previously published > schemaPublish (initial) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > check validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), underscore (_), or forward slash (/).


`;

exports[`SINGLE > check validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), underscore (_), or forward slash (/).


`;

exports[`SINGLE > check validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`SINGLE > publish validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), underscore (_), or forward slash (/).


`;

exports[`SINGLE > publish validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), underscore (_), or forward slash (/).


`;

exports[`SINGLE > publish validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > publishing invalid schema SDL provides meaningful feedback for the user. > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: The SDL is not valid at line 1, column 1:
 ›    Syntax Error: Unexpected Name "iliketurtles".  [301]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;

exports[`SINGLE > schema:check rejects a \`--url\` argument in single projects 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - url is only supported by distributed projects


`;

exports[`SINGLE > schema:check should notify user when registry is empty > schemaCheck 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`SINGLE > schema:check should throw on corrupted schema > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Unknown type User.

View full report:
http://__URL__

`;

exports[`SINGLE > schema:fetch can fetch a latest schema with target:registry:read access > latest sdl 1`] = `
type Query {
  users: [User!]
}

type User {
  id: ID!
  name: String!
  email: String!
}
`;

exports[`SINGLE > schema:fetch can fetch a latest schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > schema:fetch can fetch a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`SINGLE > schema:publish should see Invalid Token error when token is invalid > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: A valid registry token is required to perform the action. The
 ›   registry token used does not exist or has been revoked.  [106]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;

exports[`STITCHING > can publish a schema with breaking, warning and safe changes > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 4 changes

   Breaking changes:
   - Field email was removed from object type User
   Dangerous changes:
   - Enum value VIEWER was added to enum UserRole
   Safe changes:
   - Field address was added to object type User
   - Field User.role changed type from UserRole to UserRole!

View full report:
http://__URL__

`;

exports[`STITCHING > can publish a schema with breaking, warning and safe changes > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > can publish and check a schema with target:registry:read access > schemaCheck (breaking) 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Field email was removed from object type User

ℹ Detected 1 change

   Breaking changes:
   - Field email was removed from object type User

View full report:
http://__URL__

`;

exports[`STITCHING > can publish and check a schema with target:registry:read access > schemaCheck (non-breaking) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
ℹ Detected 1 change

   Safe changes:
   - Field nickname was added to object type User

View full report:
http://__URL__
`;

exports[`STITCHING > can publish and check a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > can update a service without providing a url if previously published > schema publish initial 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > can update a service without providing a url if previously published > schema publish same url 1`] = ``;

exports[`STITCHING > can update a service without providing a url if previously published > schemaPublish (initial) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > can update the service url and show it in comparison query > schemaPublish (initial) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > can update the service url and show it in comparison query > schemaPublish (new) 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ New service url: http://__URL__ (previously: http://__URL__
ℹ Available at http://__URL__
`;

exports[`STITCHING > check validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`STITCHING > check validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`STITCHING > check validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`STITCHING > publish validates the service name > onlyNumbers 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`STITCHING > publish validates the service name > specialCharacters 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: Schema publish failed.  [300]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
✖ Detected 1 error

   - Invalid service name. Service name must be 64 characters or less, must start with a letter, and can only contain alphanumeric characters, dash (-), or underscore (_).


`;

exports[`STITCHING > publish validates the service name > success 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > publishing invalid schema SDL provides meaningful feedback for the user. > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: The SDL is not valid at line 1, column 1:
 ›    Syntax Error: Unexpected Name "iliketurtles".  [301]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;

exports[`STITCHING > schema:check accepts a \`--url\` argument in distributed projects 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`STITCHING > schema:check should notify user when registry is empty > schemaCheck 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Schema registry is empty, nothing to compare your schema with.
View full report:
http://__URL__
`;

exports[`STITCHING > schema:check should throw on corrupted schema > schemaCheck 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
1
stderr--------------------------------------------:
__NONE__
stdout--------------------------------------------:
✖ Detected 3 errors

   - Unknown type User.
   - Unknown type: User.
   - Unknown type: User.

View full report:
http://__URL__

`;

exports[`STITCHING > schema:fetch can fetch a latest schema with target:registry:read access > latest sdl 1`] = `
type Query {
  users: [User!]
}

type User {
  id: ID!
  name: String!
  email: String!
}
`;

exports[`STITCHING > schema:fetch can fetch a latest schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > schema:fetch can fetch a schema with target:registry:read access > schemaPublish 1`] = `
:::::::::::::::: CLI SUCCESS OUTPUT :::::::::::::::::

stdout--------------------------------------------:
✔ Published initial schema.
ℹ Available at http://__URL__
`;

exports[`STITCHING > schema:publish should see Invalid Token error when token is invalid > schemaPublish 1`] = `
:::::::::::::::: CLI FAILURE OUTPUT :::::::::::::::
exitCode------------------------------------------:
2
stderr--------------------------------------------:
 ›   Error: A valid registry token is required to perform the action. The
 ›   registry token used does not exist or has been revoked.  [106]
 ›   > See https://__URL__ for
 ›    a complete list of error codes and recommended fixes.
 ›   To disable this message set HIVE_NO_ERROR_TIP=1
stdout--------------------------------------------:
__NONE__
`;
