diff --git a/lib/rules/no-custom-classname.js b/lib/rules/no-custom-classname.js
index 97216be99de4137d492928fde5b4ae0b7981c8ab..8d5f76cc5c70508f7688642335edb4ec52f74ade 100644
--- a/lib/rules/no-custom-classname.js
+++ b/lib/rules/no-custom-classname.js
@@ -141,6 +141,8 @@ module.exports = {
           return; // Lazier is faster... processing next className!
         }
 
+        console.error('>> twConfig', twConfig)
+
         // No match found
         context.report({
           node,
diff --git a/lib/util/customConfig.js b/lib/util/customConfig.js
index 1ab15994a1e236b11fe8f3fd03404cea32c7099c..926a641f670f0725624837098a4cb6125514603e 100644
--- a/lib/util/customConfig.js
+++ b/lib/util/customConfig.js
@@ -39,27 +39,34 @@ function requireUncached(module) {
  * @returns `null` when unchanged, `{}` when not found
  */
 function loadConfig(config) {
+  console.log('loading config', config);
   let loadedConfig = null;
   if (typeof config === 'string') {
     const resolvedPath = path.isAbsolute(config) ? config : path.join(path.resolve(), config);
+    console.log({ resolvedPath });
     try {
       const stats = fs.statSync(resolvedPath);
       const mtime = `${stats.mtime || ''}`;
       if (stats === null) {
+        console.log('defaulting to no config');
         // Default to no config
         loadedConfig = {};
       } else if (lastModifiedDate !== mtime) {
         // Load the config based on path
+        console.log('loading the config based on path');
         lastModifiedDate = mtime;
         loadedConfig = requireUncached(resolvedPath);
       } else {
+        console.log('config unchanged');
         // Unchanged config
         loadedConfig = null;
       }
     } catch (err) {
+      console.error('error loading config');
       // Default to no config
       loadedConfig = {};
     } finally {
+      console.log('loaded config', loadedConfig);
       return loadedConfig;
     }
   } else {
@@ -91,6 +98,7 @@ function resolve(twConfig) {
     const userConfig = loadConfig(twConfig);
     // userConfig is null when config file was not modified
     if (userConfig !== null) {
+      console.log('changing merged config to', twConfig);
       mergedConfig = resolveConfig(userConfig);
     }
   }
